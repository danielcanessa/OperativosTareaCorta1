#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass paper
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Introducción
\end_layout

\begin_layout Subsection
Demonios en Linux
\end_layout

\begin_layout Standard
[1] Un demonio es un tipo de programa de Unix que se ejecuta de manera constante
 sin que el usuario se de cuenta.
 Muchos de estos demonios se ejecutan constantemente esperando algún evento
 significativo.
 Otros demonios se ejecutan de manera periódica y concluyen al ejecutar
 su tarea.
 Por ejemplos el uucp, utilidad de transferencia de archivos.
\end_layout

\begin_layout Standard
[2] Los demonios son normalmente inicializados como un proceso.
 Un proceso es una instancia existente de un programa, la cual es administrada
 por el kernel a la que se le asigna un identificador de proceso.
 Existen tres tipos de procesos en linux: interactivos, batch y demonios.
 
\end_layout

\begin_layout Standard
Los interactivos se ejecutan a nivel de usuario mediante línea de comandos
 y los bash se agregan a una cola de comandos que no está asociada a la
 línea de comandos utilizada.
 Por su parte los demonios son reconocidos por el sistema como un proceso
 normal, aunque no esté en contacto con el usuario y normalmente se inician
 con el boot del sistema
\end_layout

\begin_layout Standard
Los demonios son muy sencillos de programar en el ambiente the UNIX.
 Pueden ser escritos por cualquier usuario y lanzado periódicamente mediante
 la línea de comandos, o System V.
 
\end_layout

\begin_layout Standard
[3] Para crear un demonio se deben seguir lo siguientes pasos: 
\end_layout

\begin_layout Enumerate
fork() para que el proceso padre pueda salir, así la devuelve control a
 la línea de comandos que llamó al programa.
\end_layout

\begin_layout Enumerate
setsid() para hacerse una sesión y una sesión de grupo lider de manera tal
 que el proceso no tenga una terminal controlada.
\end_layout

\begin_layout Enumerate
fork() de nuevo para que el padre (la sesión del grupo líder) pueda salirse.
 Esto significa que estamos en una sesión sin grupo leader, por lo que no
 puede controlar de nuevo una terminal.
 
\end_layout

\begin_layout Enumerate
chdir(“/”) para asegurarse que nuestro proceso no retenga ningún directorio
 en uso.
 
\end_layout

\begin_layout Enumerate
unmask(0) para tener completo control the permisos sobre cualquier archivo
 que escriba.
 close() fds 0, 1 and 2.
 Libera los estandar de entrada , salida y error heredados del proceso padre.
 
\end_layout

\begin_layout Enumerate
Establecer un archivo para registrar los eventos y errores del demonio 
\end_layout

\begin_layout Standard
[2]Los sistemas de Unix ejecutan una gran cantidad de demonios, principalmente
 para responder a peticiones de servicios de computadores en la red, además
 de responder a otros programas y actividades del hardware.
 No es necesario que el responsable de ejecutar la acción del demonio este
 conciente que el demonio está escuchando aunque algunos programas frecuentement
e ejecutan acciones porque saben que un demonio está atento a esas señales.
 
\end_layout

\begin_layout Standard
[4] Dentro de los demonios más importante de Linux , y por lo tanto las
 funciones más importantes de los mismo podemos encontrar init, el programa
 encargado de lanzar todos los otros procesos, crond , el calendarizador
 de tareas basado en tiempo o por ejemplo httpd que es un servidor web entre
 otros como ntpd,sshd, syncd entre otras.
 
\end_layout

\begin_layout Section
Bibliotecas
\end_layout

\begin_layout Subsection
Unistd.h
\end_layout

\begin_layout Standard
Es la biblioteca encargada de dar acceso al API de POXI.
 De los cuales se utilizan métodos como fork() para crear procesos hijos
 en la creación del demonio.
 
\end_layout

\begin_layout Subsection
Signal.h
\end_layout

\begin_layout Standard
Esta biblioteca permite el manejo de señales que se reportan durante la
 ejecución del programa, de igual manera esta es importante para la generación
 del demonio y es utilizada en las siguientes líneas de código como signal(SIGCH
LD, SIG_IGN) donde se le indica al proceso que ignore la señal enviada por
 su padre cuando este termine el proceso y signal(SIGHUP, SIG_IGN) que le
 indica al proceso que ignore la señal de que la terminal donde fue ejecutado
 ha sido cerrada.
 
\end_layout

\begin_layout Subsection
sys/types.h y sys/stat
\end_layout

\begin_layout Standard
La librería sys/stat permite obtener información sobre ficheros y en sys/types
 están definidos algunos tipos de datos utilizados por la biblioteca anterior.
 Estos son importantes para leer archivos y obtener datos del monitoreo
 del CPU y memoria.
\end_layout

\begin_layout Subsection
syslog.h
\end_layout

\begin_layout Standard
Es la biblioteca utilizada para el registro de mensajes.
 Utilizados en el proyecto para debug los mensajes de error de los procesos.
 
\end_layout

\begin_layout Subsection
sys/sysinfo.h
\end_layout

\begin_layout Standard
Esta biblioteca devuelve estadísticas respecto al uso de la memoria y el
 uso de swap también como la carga promedio de la memoria y otros datos.
 Mediante el metodo int sysinfo(struct sysinfo *info) que almacenara todos
 los datos en la estructura ingresada como parametro.
\end_layout

\begin_layout Subsection
sys/statvfs.h
\end_layout

\begin_layout Standard
Para calcular el uso de los archivos del sistema se utilizó esta biblioteca
 que brinda datos sobre los archivos del sistema que permiten el cálculo
 del uso actual de las carpetas del sistema.
 Mediante el metodo statvfs(path, &vfs) donde los datos de la carpeta indicada
 en el path seran guardados en el parametro vfs.
 
\end_layout

\begin_layout Section
Referencias
\end_layout

\begin_layout Itemize
[1] http://cjh.polyplex.org/software/daemon.pdf
\end_layout

\begin_layout Itemize
[2]http://www.linfo.org/daemon.html 
\end_layout

\begin_layout Itemize
[3]http://web.archive.org/web/20120914180018/http://www.steve.org.uk/Reference/Unix/f
aq_2.html#SEC16 
\end_layout

\begin_layout Itemize
[4]Verma, Archna (2006), Unix and Shell Programming
\end_layout

\end_body
\end_document
